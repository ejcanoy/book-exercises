#7
life_exp_df$recent_change <- life_exp_df$X2016 - life_exp_df$X1996
View(life_exp_df)
#8
#rows?
num_small_gain <- life_exp_df[life_exp_df$recent_change < 1, ]
View(num_small_gain)
#9
most_improved <- life_exp_df[life_exp_df$recent_change == max(life_exp_df$recent_change, na.rm = TRUE), "country"]
print(most_improved)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
print(df_life_expectancy[country_name, "X2018"])
df_life_expectancy[country_name, "X1968"]
return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
class(life_exp_df)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
class(country_change)
return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
life_exp_df <- read.csv("data/life_expectancy_years.csv", stringsAsFactors = FALSE)
class(life_exp_df)
View(life_exp_df)
#3
get_col_mean <- function(column) {
return(mean(column, na.rm = TRUE))
}
#4
get_col_mean(life_exp_df[ , "X2018"])
#5
#calculates the world average of life expectancy for each year
world_averages <- lapply(life_exp_df[-1], get_col_mean)
View(world_averages)
class(world_averages)
#6
world_change_18 <- world_averages$X2018 - world_averages$X1918
print(world_change_18)
#7
life_exp_df$recent_change <- life_exp_df$X2016 - life_exp_df$X1996
View(life_exp_df)
#8
#rows?
num_small_gain <- life_exp_df[life_exp_df$recent_change < 1, ]
View(num_small_gain)
#9
most_improved <- life_exp_df[life_exp_df$recent_change == max(life_exp_df$recent_change, na.rm = TRUE), "country"]
print(most_improved)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
class(country_change)
return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
print(df_life_expectancy[country_name, "X2018"])
print(df_life_expectancy[country_name, "X1968"])
#class(country_change)
#return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
print(df_life_expectancy)
print(df_life_expectancy[country_name, "X2018"])
print(df_life_expectancy[country_name, "X1968"])
#class(country_change)
#return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
print(country_name)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
print(df_life_expectancy)
print(country_name)
print(df_life_expectancy[country_name, "X2018"])
print(df_life_expectancy[country_name, "X1968"])
#class(country_change)
#return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
print(df_life_expectancy)
print(country_name)
print(df_life_expectancy[country_name, ])
print(df_life_expectancy[country_name, "X1968"])
#class(country_change)
#return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
# print(df_life_expectancy)
#  print(country_name)
print(df_life_expectancy[country_name, ])
#  print(df_life_expectancy[country_name, "X1968"])
#class(country_change)
#return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
# print(df_life_expectancy)
#  print(country_name)
print(df_life_expectancy[ "Haiti", ])
#  print(df_life_expectancy[country_name, "X1968"])
#class(country_change)
#return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
print(df_life_expectancy)
#  print(country_name)
print(df_life_expectancy[ "Haiti", ])
#  print(df_life_expectancy[country_name, "X1968"])
#class(country_change)
#return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
View(df_life_expectancy)
#  print(country_name)
print(df_life_expectancy[ "Haiti", ])
#  print(df_life_expectancy[country_name, "X1968"])
#class(country_change)
#return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
View(df_life_expectancy)
#  print(country_name)
print(df_life_expectancy[ Haiti, ])
#  print(df_life_expectancy[country_name, "X1968"])
#class(country_change)
#return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "X2018"] - df_life_expectancy[country_name, "X1968"]
return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[country_name, "2018"] - df_life_expectancy[country_name, "1968"]
return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[df_life_expectancy$country == country_name, "X2018"] - df_life_expectancy[df_life_expectancy$country == country_name, "X1968"]
return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- df_life_expectancy[df_life_expectancy$country == country_name, "X2018"] -
(df_life_expectancy[df_life_expectancy$country == country_name, "X1968"])
return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
#10
# returns the change of life expectancy between 2018 and 1968 for the given country and data frame
get_country_change <- function(country_name, df_life_expectancy) {
country_change <- (df_life_expectancy[df_life_expectancy$country == country_name, "X2018"]) -
(df_life_expectancy[df_life_expectancy$country == country_name, "X1968"])
return(country_change)
}
#11
get_country_change("Haiti", life_exp_df)
us_vs_cuba <- compare_countries("United States", "Cuba", life_exp_df)
print(us_vs_cuba)
# filters women and children in class and calculates survival rate
child_and_women_in_class <- people_in_class[
(people_in_class$Sex == "Female" & people_in_class$Age == "Adult")
| people_in_class$Age == "Child", ]
survival_rate_child_and_women <- 100 * round(
(sum(child_and_women_in_class[child_and_women_in_class$Survived == "Yes", "Freq"])
/ sum(child_and_women_in_class[, "Freq"])), digits = 2)
#creates survival rate sentence
sentence <- paste ("Of ", ticket_class, " class, ", survival_rate_male, "% of men survived and ", survival_rate_child_and_women,
"% of women and children survived", sep = "")
return(sentence)
}
#8
calc_survival_rate("1st")
calc_survival_rate("2nd")
calc_survival_rate("3rd")
calc_survival_rate("1st")
calc_survival_rate("2nd")
calc_survival_rate("3rd")
#7
# returns the survival rate a men and women/children with the given class
calc_survival_rate <- function(ticket_class){
# filters all the people in the class
people_in_class <-titanic_df[titanic_df$Class == ticket_class,]
# filters males in class and calculates the survival rate
adult_males_in_class <- people_in_class[people_in_class$Sex == "Male" &
people_in_class$Age == "Adult", ]
survival_rate_male <- 100 * round((
sum(adult_males_in_class[adult_males_in_class$Survived == "Yes" , "Freq"])
/ sum(adult_males_in_class[, "Freq"])), digits = 2)
# filters women and children in class and calculates survival rate
child_and_women_in_class <- people_in_class[
(people_in_class$Sex == "Female" & people_in_class$Age == "Adult")
| people_in_class$Age == "Child", ]
survival_rate_child_and_women <- 100 * round(
(sum(child_and_women_in_class[child_and_women_in_class$Survived == "Yes", "Freq"])
/ sum(child_and_women_in_class[, "Freq"])), digits = 2)
#creates survival rate sentence
sentence <- paste ("Of ", ticket_class, " class, ", survival_rate_male, "% of men survived and ", survival_rate_child_and_women,
"% of women and children survived", sep = "")
return(sentence)
}
#7
# returns the survival rate a men and women/children with the given class
calc_survival_rate <- function(ticket_class){
# filters all the people in the class
people_in_class <-titanic_df[titanic_df$Class == ticket_class,]
# filters males in class and calculates the survival rate
adult_males_in_class <- people_in_class[people_in_class$Sex == "Male" &
people_in_class$Age == "Adult", ]
survival_rate_male <- 100 * round((
sum(adult_males_in_class[adult_males_in_class$Survived == "Yes" , "Freq"])
/ sum(adult_males_in_class[, "Freq"])), digits = 2)
# filters women and children in class and calculates survival rate
child_and_women_in_class <- people_in_class[
(people_in_class$Sex == "Female" & people_in_class$Age == "Adult")
| people_in_class$Age == "Child", ]
survival_rate_child_and_women <- 100 * round(
(sum(child_and_women_in_class[child_and_women_in_class$Survived == "Yes", "Freq"])
/ sum(child_and_women_in_class[, "Freq"])), digits = 2)
#creates survival rate sentence
sentence <- paste ("Of ", ticket_class, " class, ", survival_rate_male,
"% of men survived and ", survival_rate_child_and_women,
"% of women and children survived", sep = "")
return(sentence)
}
# calculates women and children survival rate
survival_rate_child_and_women <- 100 * round(
(sum(child_and_women_in_class[child_and_women_in_class$Survived == "Yes", "Freq"])
/ sum(child_and_women_in_class[, "Freq"])), digits = 2)
#creates survival rate sentence
sentence <- paste ("Of ", ticket_class, " class, ", survival_rate_male,
"% of men survived and ", survival_rate_child_and_women,
"% of women and children survived", sep = "")
return(sentence)
}
#7
# returns the survival rate a men and women/children with the given class
calc_survival_rate <- function(ticket_class){
# filters all the people in the class
people_in_class <-titanic_df[titanic_df$Class == ticket_class,]
# filters males in class calculates the survival rate
adult_males_in_class <- people_in_class[people_in_class$Sex == "Male" &
people_in_class$Age == "Adult", ]
#calculates male survival rate
survival_rate_male <- 100 * round((
sum(adult_males_in_class[adult_males_in_class$Survived == "Yes" , "Freq"])
/ sum(adult_males_in_class[, "Freq"])), digits = 2)
# filters women and children in class and calculates survival rate
child_and_women_in_class <- people_in_class[
(people_in_class$Sex == "Female" & people_in_class$Age == "Adult")
| people_in_class$Age == "Child", ]
# calculates women and children survival rate
survival_rate_child_and_women <- 100 * round(
(sum(child_and_women_in_class[child_and_women_in_class$Survived == "Yes", "Freq"])
/ sum(child_and_women_in_class[, "Freq"])), digits = 2)
#creates survival rate sentence
sentence <- paste ("Of ", ticket_class, " class, ", survival_rate_male,
"% of men survived and ", survival_rate_child_and_women,
"% of women and children survived", sep = "")
return(sentence)
}
#8
calc_survival_rate("1st")
calc_survival_rate("2nd")
calc_survival_rate("3rd")
num_small_gain <- life_exp_df[life_exp_df$recent_change < 1, ]
View(num_small_gain)
num_small_gain <- nrow(life_exp_df[life_exp_df$recent_change < 1, ])
print(num_small_gain)
num_small_gain <- nrow(life_exp_df[life_exp_df$recent_change < 1, ])
print(num_small_gain)
num_small_gain <- life_exp_df[life_exp_df$recent_change < 1, ]
print(num_small_gain)
num_small_gain <- life_exp_df[life_exp_df$recent_change < 1, ]
View(num_small_gain)
new_col_names <- c("ta", "math_grade", "spanish_grade")
colnames(ta_grades) <- new_col_names
#7
# adds a boolean column that determines if math grades are better than
# spanish grades to the ta grades table
ta_grades$better_at_math <- ((ta_grades$math_grade - ta_grades$spanish_grade) > 0)
View(ta_grades)
#5
# creates a description of the ta_grades table
col_names <- paste(colnames(ta_grades), collapse = ", ")
table_description <- paste("The grade data frame has", nrow(ta_grades),
"rows and", ncol(ta_grades), "cols:", col_names)
print(table_description)
#################
#### PART 1 #####
#################
#1
# creates a vector containing all the tas
tas <- c( "Phuong Vu", "Yunwei Liang", "Yubing Tian", "Gavin Sreesangkom",
"Coco Li", "George Zhang", "Saurav Sawansukha", "YuYu Madiga" )
#2
# randomly generates 8 math grades with a mean of 3.6 and a standard deviation of 0.40
math_grades <- c(rnorm(8, 3.6, 0.40))
#3
# randomly generates 8 spanish grades with a mean of 3.8 and a standard deviation of 0.25
spanish_grades <- c(rnorm(8, 3.8, 0.25))
#4
ta_grades <- data.frame(tas, math_grades, spanish_grades, stringsAsFactors = FALSE)
#5
# creates a description of the ta_grades table
col_names <- paste(colnames(ta_grades), collapse = ", ")
table_description <- paste("The grade data frame has", nrow(ta_grades),
"rows and", ncol(ta_grades), "cols:", col_names)
print(table_description)
#6
new_col_names <- c("ta", "math_grade", "spanish_grade")
colnames(ta_grades) <- new_col_names
#7
# adds a boolean column that determines if math grades are better than
# spanish grades to the ta grades table
ta_grades$better_at_math <- ((ta_grades$math_grade - ta_grades$spanish_grade) > 0)
View(ta_grades)
#8
print(ta_grades[ta_grades$ta == "Yunwei Liang", ])
#9
num_better_at_math <- nrow(ta_grades[ta_grades$better_at_math == TRUE, ])
#10
# Changes math grades above 4.0 to 4.0
ta_grades[ta_grades$math_grade > 4.0, "math_grade" ] <- 4.0
# Changes spanish grades above 4.0 to 4.0
ta_grades[ta_grades$spanish_grade > 4.0, "spanish_grade" ] <- 4.0
View(ta_grades)
#11
write.csv(ta_grades, "grade_data.csv", row.names = FALSE)
print(table_description)
#5
# creates a description of the ta_grades table
col_names <- paste(colnames(ta_grades), collapse = ", ")
table_description <- paste("The grade data frame has", nrow(ta_grades),
"rows and", ncol(ta_grades), "cols:", col_names)
print(table_description)
print(ta_grades[ta_grades$ta == "Yunwei Liang", ])
#5
num_children <- sum(children[, "Freq"])
print(num_children)
print(most_losses)
#7
# returns the survival rate a men and women/children with the given class
calc_survival_rate <- function(ticket_class){
# filters all the people in the class
people_in_class <-titanic_df[titanic_df$Class == ticket_class,]
# filters males in class calculates the survival rate
adult_males_in_class <- people_in_class[people_in_class$Sex == "Male" &
people_in_class$Age == "Adult", ]
#calculates male survival rate
survival_rate_male <- 100 * round((
sum(adult_males_in_class[adult_males_in_class$Survived == "Yes" , "Freq"])
/ sum(adult_males_in_class[, "Freq"])), digits = 2)
# filters women and children in class and calculates survival rate
child_and_women_in_class <- people_in_class[
(people_in_class$Sex == "Female" & people_in_class$Age == "Adult")
| people_in_class$Age == "Child", ]
# calculates women and children survival rate
survival_rate_child_and_women <- 100 * round(
(sum(child_and_women_in_class[child_and_women_in_class$Survived == "Yes", "Freq"])
/ sum(child_and_women_in_class[, "Freq"])), digits = 2)
# creates survival rate sentence
sentence <- paste ("Of ", ticket_class, " class, ", survival_rate_male,
"% of men survived and ", survival_rate_child_and_women,
"% of women and children survived", sep = "")
return(sentence)
}
#8
calc_survival_rate("1st")
calc_survival_rate("2nd")
calc_survival_rate("3rd")
print(get_col_mean(life_exp_df[ , "X2018"]))
world_change_18 <- world_averages$X2018 - world_averages$X1918
print(world_change_18)
print(num_small_gain)
print(most_improved)
get_country_change("Haiti", life_exp_df)
us_vs_cuba <- compare_countries("United States", "Cuba", life_exp_df)
print(us_vs_cuba)
View(us_vs_cuba)
print(world_change_18)
print(world_averages)
# Exercise 1: working with data frames (review)
# Install devtools package: allows installations from GitHub
install.packages("devtools")
# Install "fueleconomy" dataset from GitHub
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
View("vehicles")
View("vehicles")
View(vehicles)
manufacturers <- vehicles[ ,make]
class(vehicles)
manufacturers <- vehicles[ , "make"]
unique(manufacturers)
vehicles[ vehicles$year == "1997" , "year"]
manufacturers <- vehicles$make
length(unique(manufacturers))
vehicles[vehicles$year == "1997" , ]
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
vehicles_1997 <- vehicles[vehicles$year == 1997, ]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
order()
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
vehicles_2wd <- vehicles[vehicles$drive == "2-Wheel Drive", ]
efficent_2wd <- vehicles_2wd[vehicles_2wd$cty > 20, ]
print(efficient_2wd)
vehicles_1997 <- vehicles[vehicles$year == 1997, ]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
vehicles_2wd <- vehicles[vehicles$drive == "2-Wheel Drive", ]
efficent_2wd <- vehicles_2wd[vehicles_2wd$cty > 20, ]
print(efficient_2wd)
vehicles_2wd <- vehicles[vehicles$drive == "2-Wheel Drive", ]
efficient_2wd <- vehicles_2wd[vehicles_2wd$cty > 20, ]
print(efficient_2wd)
vehicles_2wd[vehicles_2wd$hwy == min(vehicles_2wd$hwy), ]
vehicles_2wd[vehicles_2wd$hwy == min(vehicles_2wd$hwy), "id" ]
install.packages("dplyr")
install.packages("dplyr")
